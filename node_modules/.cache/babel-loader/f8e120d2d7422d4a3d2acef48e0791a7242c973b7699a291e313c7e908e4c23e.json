{"ast":null,"code":"var _jsxFileName = \"/home/anonymous/courses/wds_react/src/CounterHooks.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from 'react'\n\n// export default function CounterHooks(props){\n//     const [state, setState] = useState({count: props.initialCount})\n//     return <>\n//         <button onClick={() => setState(prevState =>{\n//             return {count : prevState.count-1}})}>-</button>\n//         <span>{state.count}</span>\n//         <button onClick={() => setState({count: state.count+1})}>+</button>\n//     </>\n// }\n\n// import React, {useState} from 'react';\n\n// export default function CounterHooks({initialcount}){\n//     const [count, setCount] = useState(initialcount)\n//     return <>\n//         <button onClick={() => setCount(prevCount => prevCount-1)}>-</button>\n//         <span>{count}</span>\n//         <button onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\n//     </>\n// }\n\nimport React, { useState } from 'react';\n\n// export default function CounterHooks({ initialcount }) {\n//   const [count, setCount] = useState(initialcount);\n\n//   return (\n//     <>\n//       <button onClick={() => setCount(prevCount => prevCount - 1)}>-</button>\n//       <span>{count}</span>\n//       <button onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\n//     </>\n//   );\n// }\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CounterHooks({\n  initialcount\n}) {\n  _s();\n  const [count, setCount] = useState(initialcount);\n  const decrement = () => {\n    setCount(prevCount => prevCount - 1);\n  };\n  const increment = () => {\n    setCount(prevCount => prevCount + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrement,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(CounterHooks, \"brCmEN72vGVRW2VkoRySDcbuYU4=\");\n_c = CounterHooks;\nvar _c;\n$RefreshReg$(_c, \"CounterHooks\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CounterHooks","initialcount","_s","count","setCount","decrement","prevCount","increment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/anonymous/courses/wds_react/src/CounterHooks.js"],"sourcesContent":["// import React, {useState} from 'react'\n\n// export default function CounterHooks(props){\n//     const [state, setState] = useState({count: props.initialCount})\n//     return <>\n//         <button onClick={() => setState(prevState =>{\n//             return {count : prevState.count-1}})}>-</button>\n//         <span>{state.count}</span>\n//         <button onClick={() => setState({count: state.count+1})}>+</button>\n//     </>\n// }\n\n// import React, {useState} from 'react';\n\n// export default function CounterHooks({initialcount}){\n//     const [count, setCount] = useState(initialcount)\n//     return <>\n//         <button onClick={() => setCount(prevCount => prevCount-1)}>-</button>\n//         <span>{count}</span>\n//         <button onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\n//     </>\n// }\n\n\nimport React, { useState } from 'react';\n\n// export default function CounterHooks({ initialcount }) {\n//   const [count, setCount] = useState(initialcount);\n\n//   return (\n//     <>\n//       <button onClick={() => setCount(prevCount => prevCount - 1)}>-</button>\n//       <span>{count}</span>\n//       <button onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\n//     </>\n//   );\n// }\n\nexport default function CounterHooks({ initialcount }) {\n    const [count, setCount] = useState(initialcount);\n  \n    const decrement = () => {\n      setCount(prevCount => prevCount - 1);\n    };\n  \n    const increment = () => {\n      setCount(prevCount => prevCount + 1);\n    };\n  \n    return (\n      <>\n        <button onClick={decrement}>-</button>\n        <span>{count}</span>\n        <button onClick={increment}>+</button>\n      </>\n    );\n  }"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACM,YAAY,CAAC;EAEhD,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAACE,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBH,QAAQ,CAACE,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;EACtC,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAQY,OAAO,EAAEJ,SAAU;MAAAG,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtChB,OAAA;MAAAW,QAAA,EAAOL;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpBhB,OAAA;MAAQY,OAAO,EAAEF,SAAU;MAAAC,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACtC,CAAC;AAEP;AAACX,EAAA,CAlBqBF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}